plugins {
  id 'java'
  id 'application'
  id 'org.openjfx.javafxplugin' version '0.0.13'
  id 'org.beryx.jlink' version '2.25.0'
}

group 'com.tzuchi'
version '1.0.0'

repositories {
  mavenCentral()
}

ext {
  javaFxVersion = '17.0.10'
}

java {
  sourceCompatibility = '17'
  targetCompatibility = '17'
}

javafx {
  version = javaFxVersion
  modules = ['javafx.controls', 'javafx.media']
}

dependencies {
  implementation 'com.fasterxml.jackson.core:jackson-databind:2.14.2'
  implementation 'com.fasterxml.jackson.core:jackson-annotations:2.14.2'

  implementation "org.openjfx:javafx-base:${javaFxVersion}:win"
  implementation "org.openjfx:javafx-graphics:${javaFxVersion}:win"
  implementation "org.openjfx:javafx-controls:${javaFxVersion}:win"
  implementation "org.openjfx:javafx-media:${javaFxVersion}:win"

  testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
  testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.2'
}

application {
  mainModule = 'tzuchi.scaningroomsystem'
  mainClass = 'com.tzuchi.scaningroomsystem.ScanningRoomSystem'
}

tasks.withType(JavaCompile) {
  options.encoding = 'UTF-8'
  options.compilerArgs += [
          '--module-path', classpath.asPath
  ]
}

test {
  useJUnitPlatform()
}

jlink {
  options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
  addOptions('--bind-services')
  forceMerge('jackson')

  launcher {
    name = 'ScanningRoomSystem'
    jvmArgs = ['-Xms128m', '-Xmx512m']
  }

  mergedModule {
    requires('java.base')
    requires('java.desktop')
    requires('java.net.http')
  }

  jpackage {
    installerType = 'exe'
    outputDir = 'installer'
    imageName = 'ScanningRoomSystem'
    skipInstaller = false

    appVersion = '1.0.0'
    vendor = 'TzuChi'


    installerOptions = [
            '--win-dir-chooser',
            '--win-menu',
            '--win-shortcut',
            '--win-per-user-install',
            '--win-menu-group', 'TzuChi',
            '--description', 'TzuChi Scanning Room System',
            '--vendor', 'TzuChi',
            '--verbose'
    ]

    jvmArgs = ['-Xms128m', '-Xmx512m']
  }
}

task cleanInstaller(type: Delete) {
  delete "${buildDir}/installer"
}

tasks.named('jpackage').configure {
  dependsOn(cleanInstaller)
}